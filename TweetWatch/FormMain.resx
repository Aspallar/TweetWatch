<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="labelTitle.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAkAAAARAAAAGwAAACQAAAAtAAAAMwAAADgAAAA6AAAAOgAAADYAAAAvAAAAJgAA
        ABsAAAAPAAAABgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAGQAAAC8AAABBAAAATQAAAFcAAABgAAAAZwAAAG8AAAB2AAAAfgAA
        AIUAAACNAAAAkwAAAJYAAACPAAAAfwAAAGQAAABBAAAAIAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABgAAAAkAAAAKAAAACQAAAAkAAAAJAAAACgAA
        AAoAAAAMAAAADwAAABUAAAAhAAAAMgAAAEUAAABdAAAAeAAAAJUAAACrAAAArQAAAJAAAABWAAAAIAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACQIAAAAAAAIAAAAQAwAALQkDAFIRCAFzFw4EiBoQBZEbEAWNFw0CgBAHAHAHAgBlAQAAcgAA
        AJsAAADFAAAAsgAAAGQAAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAEgQAAEQSCgaNJBoRxTgtH+VJPSvzVEcx+VlLMvxZSjD6UkQs9kY4
        I+s1JxXTIhYJqBAIAXMCAABmAAAApAAAANoAAACkAAAAOgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAwDwoGiioiGtlMQTH6aFo//3hnPf+AbDX/hW8t/4dw
        Kf+HcSn/hW8u/4BsNP91Yzj/YFAx/UM0HuskGAqwDAUAagAAAIIAAADdAAAAzAAAAFcAAAAIAAAAAAAA
        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
        AP4AAAD6AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA7gAAAMMAAAB/AAAAPAAA
        ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQAA
        AGkAAADKAAAA+AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wEBAf8CAgL/AgIC/wEB
        Af8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA8wAAANYAAACfAAAAXQAA
        ACYAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAuAAAAgwAAANAAAAD3AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAPsAAADyAAAA4wAAAMgAAACcAAAAZQAA
        ADAAAAAOAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAADYAAAB/AAAAwgAAAO0AAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA5gAAALUAAACCAAAAUgAA
        ACkAAAANAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAJwAA
        AFsAAACZAAAAzAAAAOoAAAD5AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA8gAA
        ANMAAACyAAAAkwAAAHYAAABZAAAAOAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAMAAAAJQAAAEwAAAB3AAAAmwAAALgAAADMAAAA2QAAAOEAAADlAAAA5wAA
        AOYAAADkAAAA3wAAANYAAADJAAAAtQAAAJgAAABxAAAAQgAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAADAAAABoAAAAqAAAANwAA
        AEMAAABKAAAATgAAAE0AAABHAAAAPgAAADMAAAAmAAAAGAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA///wf///AAD////D//8AAP//
        /Dj//wAA///ABj//AAD//wABH/8AAJ/+AABP/wAAD/wAACf/AACP+AAAA/8AAM/wAAAR/wAAx/AAAAn/
        AADn4AAADP8AAOPgAAAEfwAA88AAAAZ/AADxwAAABj8AAPHAAAAHPwAA6MAAAAc/AADwwAAABx8AAPBA
        AAAHnwAA+AAAAAefAAD8AAAAB48AAP4AAAAHjwAA/gAAAA+PAAD/AAAAD4cAAP+AAAAeAQAA/+AAADgA
        AAD/8AAAAAAAAP/4AAAABwAA//4AAAAfAAD//wAAAP8AAP//4AAH/wAA///4AAP/AAD///+AAf8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>